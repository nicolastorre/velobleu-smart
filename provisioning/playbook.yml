---
- name: velobleu-smart playbook
  hosts: all
  sudo: yes
  vars:
    project_name: velobleu
    project_dir: /var/www/site/
    project_user: velobleu
    project_group: velobleu
    project_uid: 501
    project_gid: 501
    server_name: velobleu.local
    db_app_name: velobleu
    db_app_user: velobleu
    db_app_password: velobleu


  handlers:
  - name: restart apache
    service: name=apache2 state=restarted

  - name: restart mysql
    service: name=mysql state=restarted

  tasks:
  - name: create {{project_group}} group
    group: name={{project_group}} gid={{project_gid}} state=present

  - name: create {{project_user}} user
    user: name={{project_user}} comment="Project user {{project_user}}" uid={{project_uid}} group={{project_group}}

  # UPDATE
  - name: updates a server
    apt: update_cache=yes

  # Installation de apache
  - name: install apache
    apt: name=apache2 state=present update_cache=yes


  - name: add repo php7
    shell: echo "deb http://packages.dotdeb.org jessie all" > /etc/apt/sources.list.d/dotdeb.list
    args:
      creates: /etc/apt/sources.list.d/dotdeb.list


  - name: add key repo php7
    shell: wget -O- https://www.dotdeb.org/dotdeb.gpg | apt-key add -

  - name: updates a server
    apt: update_cache=yes

  # Installation de PHP
  - name: install php7 package
    apt: name={{item}} state=latest update_cache=yes
    with_items:
    - php7.0
    - php7.0-apcu
    - php7.0-apcu-bc
    - php7.0-curl
    - php7.0-dev
    - php7.0-json
    - php7.0-mysql
    - php7.0-zip
    - php7.0-bz2
    - php7.0-mbstring
    - php7.0-mcrypt
    - php7.0-intl
    - php7.0-imagick

  # Configuration de apache
  - name: enable required apache module
    command: a2enmod {{item}} creates=/etc/apache2/mods-enabled/{{item}}.load
    with_items:
    - rewrite
    - headers
    - expires
    - actions

    # Installation de rpm utiles
  - name: install usefull
    apt: name={{item}} state=present update_cache=yes
    with_items:
    - rsync
    - diffutils
    - ncompress
    - unzip
    - curl
    - git

  # Installation vhost
  - name: deploy project virtualhost
    template: src=files/apache/virtualhost.conf dest=/etc/apache2/sites-available/001-{{project_name}}.conf owner=root group=root mode=0644
    notify:
    - restart apache

  - name: disable default vhost
    command: a2dissite 000-default.conf
    notify:
    - restart apache

  - name: enable project virtualhost
    command: a2ensite 001-{{project_name}}.conf creates=/etc/apache2/sites-enabled/001-{{project_name}}.conf
    notify:
    - restart apache

  - name: start apache service
    service: name=apache2 state=started enabled=true

  # Installation de mysql
  - name: install mysql
    apt: name=mysql-server-5.5 state=present update_cache=yes

  - name: start mysql service
    service: name=mysql state=started enabled=yes

  - name: install python mysqldb module
    apt: name=python-mysqldb state=present update_cache=yes

  - name: create mysql vagrant user
    mysql_user: host=% name=vagrant password=vagrant priv=*.*:ALL state=present
    tags:
    - vagrant

  - name: create mysql db {{db_app_name}}
    mysql_db: name={{db_app_name}} encoding=utf8 collation=utf8_unicode_ci state=present


  - name: create mysql user {{db_app_user}}
    mysql_user: name={{db_app_user}} password={{db_app_password}} priv=*.*:ALL state=present

  # Instllation de pma pour php7
  - name: install/maj pma
    shell: wget https://files.phpmyadmin.net/phpMyAdmin/4.6.4/phpMyAdmin-4.6.4-all-languages.zip && unzip phpMyAdmin-4.6.4-all-languages.zip && rm -Rf phpmyadmin && mv phpMyAdmin-4.6.4-all-languages phpmyadmin && chmod -R 0755 phpmyadmin
    args:
      chdir: /usr/share
      creates: phpMyAdmin-4.6.4-all-languages.zip


  # Installation vhost pma
  - name: deploy pma
    template: src=files/apache/pma.conf dest=/etc/apache2/sites-available/pma.conf owner=root group=root mode=0644

  - name: enable pma
    command: a2ensite pma
    notify:
    - restart apache

 # Installation des packages sp√©cifiques au dev front
  - name: Install Packages NodeJS - NPM
    apt: name={{ item }} update_cache=yes state=present
    with_items:
      - build-essential
      - nodejs
      - nodejs-legacy
      - npm